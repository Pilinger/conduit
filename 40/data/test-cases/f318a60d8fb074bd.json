{
  "uid" : "f318a60d8fb074bd",
  "name" : "test_reg",
  "fullName" : "python-tests.test_registration#test_reg",
  "historyId" : "4bf156b4ca466472089adf7a47771fe8",
  "time" : {
    "start" : 1628652384179,
    "stop" : 1628652395459,
    "duration" : 11280
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e5b8d4d306f3f9e8efe12b4e0b0ee283\")>\n\n    def test_reg(driver):\n        time.sleep(1)\n        # assigning the xpath texts\n        register_xpath = '//a[@href=\"#/register\"]'\n        user_xpath = '//input[@placeholder=\"Username\"]'\n        user_li_xpath = '//*[@id=\"app\"]/nav/div/ul/li[4]/a'\n        email_xpath = '//input[@placeholder=\"Email\"]'\n        password_xpath = '//input[@placeholder=\"Password\"]'\n        # test data for registration\n        user_name = 'testuser66'\n        password_str = 'Abcd123$'\n        email_end = '@example.com'\n>       sign_up_button = WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, register_xpath)))\n\npython-tests/test_registration.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e5b8d4d306f3f9e8efe12b4e0b0ee283\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7f3eef8d1c10>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1628652348333,
      "stop" : 1628652355133,
      "duration" : 6800
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "python-tests"
  }, {
    "name" : "suite",
    "value" : "test_registration"
  }, {
    "name" : "host",
    "value" : "fv-az47-289"
  }, {
    "name" : "thread",
    "value" : "3758-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "python-tests.test_registration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "4e67ad7e358d9edb",
        "reportUrl" : "https://Pilinger.github.io/conduit/32//#testresult/4e67ad7e358d9edb",
        "status" : "passed",
        "time" : {
          "start" : 1628588556936,
          "stop" : 1628588564389,
          "duration" : 7453
        }
      }, {
        "uid" : "d2fd2c310743126f",
        "reportUrl" : "https://Pilinger.github.io/conduit/31//#testresult/d2fd2c310743126f",
        "status" : "passed",
        "time" : {
          "start" : 1628588146226,
          "stop" : 1628588153655,
          "duration" : 7429
        }
      }, {
        "uid" : "ab0131b85ec6ea94",
        "reportUrl" : "https://Pilinger.github.io/conduit/30//#testresult/ab0131b85ec6ea94",
        "status" : "passed",
        "time" : {
          "start" : 1628587631573,
          "stop" : 1628587638998,
          "duration" : 7425
        }
      }, {
        "uid" : "276b617724d37541",
        "reportUrl" : "https://Pilinger.github.io/conduit/28//#testresult/276b617724d37541",
        "status" : "passed",
        "time" : {
          "start" : 1628363399096,
          "stop" : 1628363406440,
          "duration" : 7344
        }
      }, {
        "uid" : "c8b54991e40aa8b3",
        "reportUrl" : "https://Pilinger.github.io/conduit/27//#testresult/c8b54991e40aa8b3",
        "status" : "passed",
        "time" : {
          "start" : 1628324830115,
          "stop" : 1628324837538,
          "duration" : 7423
        }
      }, {
        "uid" : "176548b278820509",
        "reportUrl" : "https://Pilinger.github.io/conduit/26//#testresult/176548b278820509",
        "status" : "passed",
        "time" : {
          "start" : 1628324426017,
          "stop" : 1628324433746,
          "duration" : 7729
        }
      }, {
        "uid" : "693aba726d758a08",
        "reportUrl" : "https://Pilinger.github.io/conduit/25//#testresult/693aba726d758a08",
        "status" : "passed",
        "time" : {
          "start" : 1628107942414,
          "stop" : 1628107949774,
          "duration" : 7360
        }
      }, {
        "uid" : "960d7bbcd58be907",
        "reportUrl" : "https://Pilinger.github.io/conduit/24//#testresult/960d7bbcd58be907",
        "status" : "passed",
        "time" : {
          "start" : 1627765507072,
          "stop" : 1627765514492,
          "duration" : 7420
        }
      }, {
        "uid" : "43ad1b1696086951",
        "reportUrl" : "https://Pilinger.github.io/conduit/23//#testresult/43ad1b1696086951",
        "status" : "passed",
        "time" : {
          "start" : 1627764928267,
          "stop" : 1627764935670,
          "duration" : 7403
        }
      }, {
        "uid" : "b62fa4173a827b0d",
        "reportUrl" : "https://Pilinger.github.io/conduit/22//#testresult/b62fa4173a827b0d",
        "status" : "passed",
        "time" : {
          "start" : 1627763724443,
          "stop" : 1627763731818,
          "duration" : 7375
        }
      }, {
        "uid" : "a24254823349a2aa",
        "reportUrl" : "https://Pilinger.github.io/conduit/21//#testresult/a24254823349a2aa",
        "status" : "passed",
        "time" : {
          "start" : 1627763098363,
          "stop" : 1627763105797,
          "duration" : 7434
        }
      }, {
        "uid" : "7f08dbb31c4e276",
        "reportUrl" : "https://Pilinger.github.io/conduit/20//#testresult/7f08dbb31c4e276",
        "status" : "passed",
        "time" : {
          "start" : 1627756847604,
          "stop" : 1627756854956,
          "duration" : 7352
        }
      }, {
        "uid" : "e40baeedafb83e44",
        "reportUrl" : "https://Pilinger.github.io/conduit/19//#testresult/e40baeedafb83e44",
        "status" : "passed",
        "time" : {
          "start" : 1627756278004,
          "stop" : 1627756285355,
          "duration" : 7351
        }
      }, {
        "uid" : "c5eeb709f65faebb",
        "reportUrl" : "https://Pilinger.github.io/conduit/18//#testresult/c5eeb709f65faebb",
        "status" : "passed",
        "time" : {
          "start" : 1627404936985,
          "stop" : 1627404944402,
          "duration" : 7417
        }
      }, {
        "uid" : "f2bfad72a6e26d5d",
        "reportUrl" : "https://Pilinger.github.io/conduit/17//#testresult/f2bfad72a6e26d5d",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1627239827813,
          "stop" : 1627239838975,
          "duration" : 11162
        }
      }, {
        "uid" : "ab78b6808551de7f",
        "reportUrl" : "https://Pilinger.github.io/conduit/15//#testresult/ab78b6808551de7f",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1627237585532,
          "stop" : 1627237596805,
          "duration" : 11273
        }
      }, {
        "uid" : "b47cc86537308620",
        "reportUrl" : "https://Pilinger.github.io/conduit/14//#testresult/b47cc86537308620",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1627236922379,
          "stop" : 1627236933609,
          "duration" : 11230
        }
      }, {
        "uid" : "559ecec6addbac58",
        "reportUrl" : "https://Pilinger.github.io/conduit/13//#testresult/559ecec6addbac58",
        "status" : "passed",
        "time" : {
          "start" : 1627196078114,
          "stop" : 1627196085612,
          "duration" : 7498
        }
      }, {
        "uid" : "6029afbe4d38be19",
        "reportUrl" : "https://Pilinger.github.io/conduit/12//#testresult/6029afbe4d38be19",
        "status" : "passed",
        "time" : {
          "start" : 1627195656029,
          "stop" : 1627195663566,
          "duration" : 7537
        }
      }, {
        "uid" : "a43e12285a64a86c",
        "reportUrl" : "https://Pilinger.github.io/conduit/11//#testresult/a43e12285a64a86c",
        "status" : "passed",
        "time" : {
          "start" : 1627194435809,
          "stop" : 1627194443237,
          "duration" : 7428
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f318a60d8fb074bd.json",
  "parameterValues" : [ ]
}